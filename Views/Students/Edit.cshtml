@model ControlsAndScaffoldingTemplates.Models.Student

@{
    ViewBag.Title = "Edit";
    var enrollments = Model.Enrollments;
}

@*@Html.HiddenFor(x => x.initialEnrollments, new { @id = "initialEnrollments" })*@


<h2>Edit</h2>
@section header{
    <link href="~/Content/Required.css" rel="stylesheet" />
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnrollmentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
            </div>

        </div>

        <input type="text" placeholder="First Name" required>
        <input type="email" placeholder="Email" required>
        <input type="text" placeholder="Nick name">
        <input type="text" placeholder="Favorite pizza toping">




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#home">Enrollments</a></li>
    <li><a data-toggle="tab" href="#menu1">Menu 1</a></li>
    <li><a data-toggle="tab" href="#menu2">Menu 2</a></li>
</ul>


<div class="tab-content">
    <div id="home" class="tab-pane fade in active">
        <h3>Enrollments</h3>
        <div id="enrollmentTable">
            @*@Html.Partial("_StudentEnrollmentPartial", enrollments)*@
            @Html.Partial("~/Views/Enrollments/_StudentEnrollmentPartial.cshtml", enrollments)
        </div>
    </div>
    <div id="menu1" class="tab-pane fade">
        <h3>Menu 1</h3>
        <p>Some content in menu 1.</p>
    </div>
    <div id="menu2" class="tab-pane fade">
        <h3>Menu 2</h3>
        <p>Some content in menu 2.</p>
    </div>

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script src="~/Controls/EditableGrid/EditableGrid.js" type="text/javascript"></script>

    <script type="text/javascript">
            $(document)
                .ready(function () {
                    var $TABLE = $('#table');
                    var $BTN = $('#export-btn');
                    var $EXPORT = $('#export');


                    $('#export-btn').click(function () {
                        var $rows = $TABLE.find('tr:not(:hidden)');
                        var headers = [];
                        var data = [];

                        // Get the headers (add special header logic here)
                        $($rows.shift()).find('th:not(:empty)').each(function () {
                            headers.push($.trim($(this).text().toLowerCase()));
                        });

                        // Turn all existing rows into a loopable array
                        $rows.each(function () {
                            var $td = $(this).find('td');
                            var h = {};

                            // Use the headers from earlier to name our hash keys
                            headers.forEach(function (header, i) {
                                h[header] = $.trim($td.eq(i).text());
                            });

                            data.push(h);
                        });

                        // Output the result
                        $('#export').text(JSON.stringify(data));

                        //var enrollments = $('#initialEnrollments').val();
                        var dataToPass = JSON.stringify({ 'enrollments': data });

                        $.ajax({
                            url: '@Url.Action("EnrollmentPartial","Students")',
                            type: "POST",
                            data: dataToPass,
                            contentType: 'application/json; charset=utf=8',
                            datatype:'json'
                        })
                            .done(function (partialViewResult) {
                                $("#enrollmentTable").html(partialViewResult);
                            });

                        alert(JSON.stringify(data));
                    });
                });

    </script>
}
